import React, { useState } from 'react';\nimport { X, QrCode, User, Calendar, Clock, Train } from 'lucide-react';\n\nconst TicketViewer = ({ tickets, isOpen, onClose, journeyLabel }) => {\n  const [currentTicketIndex, setCurrentTicketIndex] = useState(0);\n  const [selectedPerson, setSelectedPerson] = useState('aastha');\n\n  if (!isOpen || !tickets || tickets.length === 0) return null;\n\n  const currentTicket = tickets[currentTicketIndex];\n  const ticketImage = selectedPerson === 'aastha' ? currentTicket.aastha : currentTicket.yubaraj;\n\n  return (\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center\">\n      {/* Backdrop */}\n      <div \n        className=\"absolute inset-0 bg-black bg-opacity-75\" \n        onClick={onClose}\n      />\n      \n      {/* Modal */}\n      <div className=\"relative bg-white rounded-lg shadow-xl max-w-md w-full mx-4 max-h-[90vh] overflow-hidden\">\n        {/* Header */}\n        <div className=\"bg-blue-600 text-white p-4 flex items-center justify-between\">\n          <div className=\"flex items-center gap-2\">\n            <QrCode className=\"w-5 h-5\" />\n            <h3 className=\"font-semibold text-sm\">{journeyLabel}</h3>\n          </div>\n          <button\n            onClick={onClose}\n            className=\"p-1 rounded hover:bg-blue-700 transition-colors\"\n          >\n            <X className=\"w-5 h-5\" />\n          </button>\n        </div>\n\n        {/* Journey Selection (if multiple) */}\n        {tickets.length > 1 && (\n          <div className=\"border-b border-gray-200 p-3\">\n            <div className=\"flex gap-2\">\n              {tickets.map((ticket, index) => (\n                <button\n                  key={index}\n                  onClick={() => setCurrentTicketIndex(index)}\n                  className={`flex-1 text-xs py-2 px-3 rounded transition-colors ${\n                    currentTicketIndex === index\n                      ? 'bg-blue-100 text-blue-700 font-medium'\n                      : 'bg-gray-100 text-gray-600 hover:bg-gray-200'\n                  }`}\n                >\n                  {ticket.label}\n                </button>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {/* Person Selection */}\n        <div className=\"border-b border-gray-200 p-3\">\n          <div className=\"flex gap-2\">\n            <button\n              onClick={() => setSelectedPerson('aastha')}\n              className={`flex items-center gap-2 flex-1 py-2 px-3 rounded transition-colors ${\n                selectedPerson === 'aastha'\n                  ? 'bg-purple-100 text-purple-700 font-medium'\n                  : 'bg-gray-100 text-gray-600 hover:bg-gray-200'\n              }`}\n            >\n              <User className=\"w-4 h-4\" />\n              <span className=\"text-sm\">Aastha's Ticket</span>\n            </button>\n            <button\n              onClick={() => setSelectedPerson('yubaraj')}\n              className={`flex items-center gap-2 flex-1 py-2 px-3 rounded transition-colors ${\n                selectedPerson === 'yubaraj'\n                  ? 'bg-green-100 text-green-700 font-medium'\n                  : 'bg-gray-100 text-gray-600 hover:bg-gray-200'\n              }`}\n            >\n              <User className=\"w-4 h-4\" />\n              <span className=\"text-sm\">Yubaraj's Ticket</span>\n            </button>\n          </div>\n        </div>\n\n        {/* Journey Details */}\n        <div className=\"p-3 border-b border-gray-200 bg-gray-50\">\n          <div className=\"flex items-center gap-4 text-xs text-gray-600\">\n            <div className=\"flex items-center gap-1\">\n              <Train className=\"w-3 h-3\" />\n              <span>{currentTicket.details.operator}</span>\n            </div>\n            <div className=\"flex items-center gap-1\">\n              <Calendar className=\"w-3 h-3\" />\n              <span>{currentTicket.details.date}</span>\n            </div>\n            <div className=\"flex items-center gap-1\">\n              <Clock className=\"w-3 h-3\" />\n              <span>{currentTicket.details.departure} to {currentTicket.details.arrival}</span>\n            </div>\n          </div>\n          {currentTicket.details.seats && (\n            <div className=\"mt-1 text-xs text-gray-500\">\n              Seats: {currentTicket.details.seats}\n            </div>\n          )}\n        </div>\n\n        {/* Ticket Image */}\n        <div className=\"p-4\">\n          {ticketImage ? (\n            <div className=\"text-center\">\n              <img \n                src={ticketImage} \n                alt={`${selectedPerson === 'aastha' ? 'Aastha' : 'Yubaraj'} ticket`}\n                className=\"max-w-full h-auto rounded-lg shadow-md\"\n                style={{ maxHeight: '400px' }}\n              />\n              <p className=\"text-xs text-gray-500 mt-2\">\n                {selectedPerson === 'aastha' ? 'Aastha Acharya' : 'Yubaraj Acharya'} Digital Ticket\n              </p>\n            </div>\n          ) : (\n            <div className=\"text-center py-8 text-gray-500\">\n              <QrCode className=\"w-12 h-12 mx-auto mb-2 opacity-50\" />\n              <p className=\"text-sm\">Ticket image not available</p>\n            </div>\n          )}\n        </div>\n\n        {/* Footer */}\n        <div className=\"bg-gray-50 p-3 text-center\">\n          <p className=\"text-xs text-gray-500\">\n            Keep this ticket ready for inspection during your journey\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TicketViewer;