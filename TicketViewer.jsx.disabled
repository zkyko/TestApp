import React, { useState } from 'react';
import { X, QrCode, User, Calendar, Clock, Train } from 'lucide-react';

const TicketViewer = ({ tickets, isOpen, onClose, journeyLabel }) => {
  const [currentTicketIndex, setCurrentTicketIndex] = useState(0);
  const [selectedPerson, setSelectedPerson] = useState('aastha');

  if (!isOpen || !tickets || tickets.length === 0) return null;

  const currentTicket = tickets[currentTicketIndex];
  const ticketImage = selectedPerson === 'aastha' ? currentTicket.aastha : currentTicket.yubaraj;

  return (
    <div className="fixed inset-0 z-50 flex items-center justify-center">
      <div 
        className="absolute inset-0 bg-black bg-opacity-75" 
        onClick={onClose}
      />
      
      <div className="relative bg-white rounded-lg shadow-xl max-w-md w-full mx-4 max-h-[90vh] overflow-hidden">
        <div className="bg-blue-600 text-white p-4 flex items-center justify-between">
          <div className="flex items-center gap-2">
            <QrCode className="w-5 h-5" />
            <h3 className="font-semibold text-sm">{journeyLabel}</h3>
          </div>
          <button
            onClick={onClose}
            className="p-1 rounded hover:bg-blue-700 transition-colors"
          >
            <X className="w-5 h-5" />
          </button>
        </div>

        {tickets.length > 1 && (
          <div className="border-b border-gray-200 p-3">
            <div className="flex gap-2">
              {tickets.map((ticket, index) => (
                <button
                  key={index}
                  onClick={() => setCurrentTicketIndex(index)}
                  className={`flex-1 text-xs py-2 px-3 rounded transition-colors ${
                    currentTicketIndex === index
                      ? 'bg-blue-100 text-blue-700 font-medium'
                      : 'bg-gray-100 text-gray-600 hover:bg-gray-200'
                  }`}
                >
                  {ticket.label}
                </button>
              ))}
            </div>
          </div>
        )}

        <div className="border-b border-gray-200 p-3">
          <div className="flex gap-2">
            <button
              onClick={() => setSelectedPerson('aastha')}
              className={`flex items-center gap-2 flex-1 py-2 px-3 rounded transition-colors ${
                selectedPerson === 'aastha'
                  ? 'bg-purple-100 text-purple-700 font-medium'
                  : 'bg-gray-100 text-gray-600 hover:bg-gray-200'
              }`}
            >
              <User className="w-4 h-4" />
              <span className="text-sm">Aastha Ticket</span>
            </button>
            <button
              onClick={() => setSelectedPerson('yubaraj')}
              className={`flex items-center gap-2 flex-1 py-2 px-3 rounded transition-colors ${
                selectedPerson === 'yubaraj'
                  ? 'bg-green-100 text-green-700 font-medium'
                  : 'bg-gray-100 text-gray-600 hover:bg-gray-200'
              }`}
            >
              <User className="w-4 h-4" />
              <span className="text-sm">Yubaraj Ticket</span>
            </button>
          </div>
        </div>

        <div className="p-3 border-b border-gray-200 bg-gray-50">
          <div className="flex items-center gap-4 text-xs text-gray-600">
            <div className="flex items-center gap-1">
              <Train className="w-3 h-3" />
              <span>{currentTicket.details.operator}</span>
            </div>
            <div className="flex items-center gap-1">
              <Calendar className="w-3 h-3" />
              <span>{currentTicket.details.date}</span>
            </div>
            <div className="flex items-center gap-1">
              <Clock className="w-3 h-3" />
              <span>{currentTicket.details.departure} - {currentTicket.details.arrival}</span>
            </div>
          </div>
          {currentTicket.details.seats && (
            <div className="mt-1 text-xs text-gray-500">
              Seats: {currentTicket.details.seats}
            </div>
          )}
        </div>

        <div className="p-4">
          {ticketImage ? (
            <div className="text-center">
              <img 
                src={ticketImage} 
                alt={`${selectedPerson} ticket`}
                className="max-w-full h-auto rounded-lg shadow-md"
                style={{ maxHeight: '400px' }}
              />
              <p className="text-xs text-gray-500 mt-2">
                {selectedPerson === 'aastha' ? 'Aastha Acharya' : 'Yubaraj Acharya'} Digital Ticket
              </p>
            </div>
          ) : (
            <div className="text-center py-8 text-gray-500">
              <QrCode className="w-12 h-12 mx-auto mb-2 opacity-50" />
              <p className="text-sm">Ticket image not available</p>
            </div>
          )}
        </div>

        <div className="bg-gray-50 p-3 text-center">
          <p className="text-xs text-gray-500">
            Keep this ticket ready for inspection during your journey
          </p>
        </div>
      </div>
    </div>
  );
};

export default TicketViewer;